{"ast":null,"code":"import React from\"react\";import{Container,Row,Col,Button}from\"react-bootstrap\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const DateNav=()=>{// Helper function to format date\nconst formatDate=date=>{return date.toLocaleDateString(\"en-US\",{weekday:\"long\",month:\"short\",day:\"numeric\"});};// Get today's date\nconst today=new Date();// Previous day (yesterday), today, and next 2 days\nconst dates=[new Date(today.getTime()-1*24*60*60*1000),// yesterday\ntoday,new Date(today.getTime()+1*24*60*60*1000),// tomorrow\nnew Date(today.getTime()+2*24*60*60*1000)// +2 days\n];return/*#__PURE__*/_jsx(Container,{fluid:true,style:{background:\"linear-gradient(0deg, #0a1c54,#073cc2)\",color:\"white\",fontSize:\"0.9rem\"},children:/*#__PURE__*/_jsx(Row,{className:\"text-center py-2\",children:dates.map((date,index)=>/*#__PURE__*/_jsx(Col,{children:date.toDateString()===today.toDateString()?/*#__PURE__*/_jsxs(Button,{variant:\"dark\",size:\"sm\",children:[\"All Prediction's Today (\",formatDate(date),\")\"]}):formatDate(date)},index))})});};export default DateNav;","map":{"version":3,"names":["React","Container","Row","Col","Button","jsxs","_jsxs","jsx","_jsx","DateNav","formatDate","date","toLocaleDateString","weekday","month","day","today","Date","dates","getTime","fluid","style","background","color","fontSize","children","className","map","index","toDateString","variant","size"],"sources":["C:/Users/AKACHUKWU/Documents/Reactweb/AEpredicts/AE-FRONTEND/src/components/DateNav.js"],"sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\n\r\nconst DateNav = () => {\r\n  // Helper function to format date\r\n  const formatDate = (date) => {\r\n    return date.toLocaleDateString(\"en-US\", {\r\n      weekday: \"long\",\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n    });\r\n  };\r\n\r\n  // Get today's date\r\n  const today = new Date();\r\n\r\n  // Previous day (yesterday), today, and next 2 days\r\n  const dates = [\r\n    new Date(today.getTime() - 1 * 24 * 60 * 60 * 1000), // yesterday\r\n    today,\r\n    new Date(today.getTime() + 1 * 24 * 60 * 60 * 1000), // tomorrow\r\n    new Date(today.getTime() + 2 * 24 * 60 * 60 * 1000), // +2 days\r\n  ];\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      style={{\r\n        background: \"linear-gradient(0deg, #0a1c54,#073cc2)\",\r\n        color: \"white\",\r\n        fontSize: \"0.9rem\",\r\n      }}\r\n    >\r\n      <Row className=\"text-center py-2\">\r\n        {dates.map((date, index) => (\r\n          <Col key={index}>\r\n            {date.toDateString() === today.toDateString() ? (\r\n              <Button variant=\"dark\" size=\"sm\">\r\n                All Prediction's Today ({formatDate(date)})\r\n              </Button>\r\n            ) : (\r\n              formatDate(date)\r\n            )}\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DateNav;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,GAAG,CAAEC,GAAG,CAAEC,MAAM,KAAQ,iBAAiB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAE9D,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB;AACA,KAAM,CAAAC,UAAU,CAAIC,IAAI,EAAK,CAC3B,MAAO,CAAAA,IAAI,CAACC,kBAAkB,CAAC,OAAO,CAAE,CACtCC,OAAO,CAAE,MAAM,CACfC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SACP,CAAC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAExB;AACA,KAAM,CAAAC,KAAK,CAAG,CACZ,GAAI,CAAAD,IAAI,CAACD,KAAK,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAC,CAAE;AACrDH,KAAK,CACL,GAAI,CAAAC,IAAI,CAACD,KAAK,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAC,CAAE;AACrD,GAAI,CAAAF,IAAI,CAACD,KAAK,CAACG,OAAO,CAAC,CAAC,CAAG,CAAC,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAG,IAAI,CAAG;AAAA,CACtD,CAED,mBACEX,IAAA,CAACP,SAAS,EACRmB,KAAK,MACLC,KAAK,CAAE,CACLC,UAAU,CAAE,wCAAwC,CACpDC,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,QACZ,CAAE,CAAAC,QAAA,cAEFjB,IAAA,CAACN,GAAG,EAACwB,SAAS,CAAC,kBAAkB,CAAAD,QAAA,CAC9BP,KAAK,CAACS,GAAG,CAAC,CAAChB,IAAI,CAAEiB,KAAK,gBACrBpB,IAAA,CAACL,GAAG,EAAAsB,QAAA,CACDd,IAAI,CAACkB,YAAY,CAAC,CAAC,GAAKb,KAAK,CAACa,YAAY,CAAC,CAAC,cAC3CvB,KAAA,CAACF,MAAM,EAAC0B,OAAO,CAAC,MAAM,CAACC,IAAI,CAAC,IAAI,CAAAN,QAAA,EAAC,0BACP,CAACf,UAAU,CAACC,IAAI,CAAC,CAAC,GAC5C,EAAQ,CAAC,CAETD,UAAU,CAACC,IAAI,CAChB,EAPOiB,KAQL,CACN,CAAC,CACC,CAAC,CACG,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAnB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}